<?xml version="1.0"?>
<!DOCTYPE profile>
<profile
  xmlns="http://www.suse.com/1.0/yast2ns"
  xmlns:config="http://www.suse.com/1.0/configns">
  <global>
    <activate config:type="boolean">true</activate>
    <!-- Kernel params (in final system) -->
    <append></append>
    <timeout config:type="integer">10</timeout>
    <boot_mbr>true</boot_mbr>
    <suse_btrfs config:type="boolean">false</suse_btrfs>
    <terminal>console</terminal>
    <secure_boot>false</secure_boot>
  </global>
  <general>
    <mode>
      <!-- Fully unattended => false -->
      <confirm config:type="boolean">true</confirm>
      <final_reboot config:type="boolean">true</final_reboot>
      <!-- NEW: false => avoid 2nd stage in automated install (behavior of normal distros) -->
      {{^stage2}}<second_stage config:type="boolean">false</second_stage>{{/stage2}}
      <forceboot config:type="boolean">true</forceboot>
    </mode>
    <self_update config:type="boolean">false</self_update>
  </general>
  <keyboard>
    <keymap>english-us</keymap>
  </keyboard>
  <language>
    <!-- warning: setlocale: LC_COLLATE: cannot change locale: (en_US.UTF-8): No such file or directory -->
    <language>en_US</language>
    <languages>en_US</languages>
  </language>
  <timezone>
    <hwclock>UTC</hwclock>
    <timezone>{{{ time_zone }}}</timezone>
  </timezone>
  
  {{> yastdrive }}
  <networking>
  <dns>
    <dhcp_hostname config:type="boolean">false</dhcp_hostname>
    <domain>{{ net.domain }}</domain>
    <hostname>{{{ net.hostname }}}</hostname>
    <nameservers config:type="list">
      {{#net.nameservers}}<nameserver>{{{ . }}}</nameserver>{{/net.nameservers}}
    </nameservers>
    <resolv_conf_policy>auto</resolv_conf_policy>
    <searchlist config:type="list">
      {{#net.namesearch}}<search>{{{ . }}}</search>{{/net.namesearch}}
    </searchlist>
  </dns>
  <interfaces config:type="list">
    <interface>
      <bootproto>static</bootproto>
      <!-- Lecagy elem-name: device, new: name -->
      <name>em1</name>
      <startmode>auto</startmode>
      <ipaddr>{{{ net.ipaddress }}}</ipaddr>
      <netmask>{{{ net.netmask }}}</netmask>
    </interface>
  </interfaces>
  <net-udev config:type="list">
    <rule>
      <name>em1</name>
      <rule>ATTR{address}</rule>
      <value>{{{ net.macaddress }}}</value>
    </rule>
  </net-udev>
  
  <ipv6 config:type="boolean">false</ipv6>
  <!-- false means use Wicked, true means use NetworkManager -->
  <managed config:type="boolean">false</managed>
  <!-- <keep_install_network config:type="boolean">true</keep_install_network> -->
  <!-- Explicit routing (section) to configure network gateway ? -->
  <routing>
    <routes config:type="list">
      <route>
        <destination>{{{ net.network }}}</destination>
        <gateway>0.0.0.0</gateway>
        <netmask>{{{ net.netmask }}}</netmask>
	<device>em1</device>
      </route>
      <route>
        <destination>default</destination>
        <gateway>{{{ net.gateway }}}</gateway>
        <netmask>-</netmask>
        <device>em1</device>
      </route>
      
    </routes>
  </routing>
  </networking>
  <firewall>
    <!-- NOTE: Despite these sysconfig/network/config FIREWALL="yes" -->
    <enable_firewall config:type="boolean">false</enable_firewall>
    <start_firewall  config:type="boolean">false</start_firewall>
  </firewall>
  <groups config:type="list">
    <group>
      <gid>{{{ user.uidnum }}}</gid>
      <groupname>{{{ user.username }}}</groupname>
      <userlist/>
    </group>
  </groups>
  <users config:type="list">
    <user>
      <username>root</username>
      <user_password>{{{ user.password }}}</user_password>
    </user>
    <user>
      <username>{{{ user.username }}}</username>
      <user_password>{{{ user.password }}}</user_password>
      <fullname>{{{ user.fullname }}}</fullname>
      <uid>{{{ user.uidnum }}}</uid>
      <gid>{{{ user.uidnum }}}</gid>
      <home>{{{ user.homedir }}}</home>
      <!-- Additional groups -->
      <groups>wheel</groups>
      <password_settings>
        <expire/>
        <flag/>
        <inact>-1</inact>
        <max>99999</max>
        <min>0</min>
        <warn>7</warn>
      </password_settings>
      <shell>/bin/bash</shell>
    </user>
  </users>
  <scripts>
    <pre-scripts config:type="list">
      <script>
        <filename>installevent_start.sh</filename>
        <source><![CDATA[
#!/bin/sh
echo "Starting installation (in original root)"
wget "http://{{ httpserver }}/installevent/start?uid=$UID&path="`pwd` || true
# Copy /proc/cmdline to chroot target

exit 0

]]>

        </source>
      </script>
    </pre-scripts>

    <chroot-scripts config:type="list">
      <script>
        <chrooted config:type="boolean">true</chrooted>
        <filename>installevent_post.sh</filename>
        <source><![CDATA[
#!/bin/sh
echo "Starting post-stage"
wget "http://{{ httpserver }}/installevent/post?uid=$UID&path="`pwd` || true
exit 0
]]>

        </source>
      </script>
{{#postscripts}}
      <script>
        <chrooted config:type="boolean">true</chrooted>
	<filename>{{{ . }}}</filename>
        <location>http://{{{ httpserver }}}/scripts/{{{ . }}}</location>
      </script>
{{/postscripts}}
      <script>
        <chrooted config:type="boolean">true</chrooted>
        <filename>installevent_end.sh</filename>
        <source><![CDATA[
#!/bin/sh
echo "Ending installation"
wget "http://{{ httpserver }}/installevent/end?uid=$UID&path="`pwd` || true
zypper search -i > /root/zypper_pkgs.`date -Iminutes`.endofinstall.txt
exit 0
]]>

        </source>
      </script>
    </chroot-scripts>
  </scripts>
  <software>
    <!-- Possibly use inst.install_recommends -->
    <install_recommended config:type="boolean">false</install_recommended>
    <!-- This could have pkg "pattern" ( profile ?) like: "Minimal" -->
    <!--<patterns config:type="list"></patterns>-->
    <packages config:type="list">
      <!-- https://www.suse.com/support/kb/doc/?id=000018432 -->
      <package>kernel-firmware</package>
      <package>openssh</package>
      <package>curl</package>
      <package>python3</package>
      <package>iputils</package>
      <!-- Not useful -->
      <package>net-tools</package>
      <!-- Actually useful But N/A in 15.2 -->
      <!--<package>net-tools-deprecated</package>-->
      <package>iproute2</package>
      <package>traceroute</package>
      <package>sudo</package>
      <package>less</package>
      <!-- Neither git or git-core exists ! libgit2-28 -->
      <!--<package>git-core</package>-->
      <package>wget</package>
      <package>mc</package>
      <package>nfs-client</package>
      <!-- perl, perl-base -->
      <package>glibc-locale</package>
      <package>glibc-locale-base</package>
      <package>vim</package>
      <package>ca-certificates</package>
      <package>ca-certificates-mozilla</package>
    </packages>
    <remove-packages config:type="list">
      <!--<package>postfix</package>-->
    </remove-packages>
    <do_online_update config:type="boolean">false</do_online_update>
  </software>
  
  <bootloader>
    <loader_type>grub2</loader_type>
  </bootloader>
  <ssh_import>
    <import config:type="boolean">true</import>
    <copy_config config:type="boolean">true</copy_config>
  </ssh_import>
</profile>
