# ## Update Splunk forwarder (by a .tgz)
# Example of running:
# ```
# ansible-playbook splunkfwdupdate.yaml -e 'pkg=splunkforwarder-9.2.2-d76edf6f0a15-Linux-x86_64.tgz host=all splunkhost=192.168.1.5 confsubdir=myapp' -l 'myhost*' 
# ```
# ## Checking version
# Run before and after update (commands given in ansible ad-hoc format for "check-all" a approach, add sudo if using command-part-only on individual host).
# ```
# # Checking an RPM based instalation
# ansible 'myhost*' -m shell -b -a 'yum list installed splunkforwarder'
# # Checking tgz based instalation
# ansible 'myhost*' -m shell -b -a '/opt/splunkforwarder/bin/splunk version'
# ```
# ## Checking effectiveness of upgrade via Splunk (Master) Server GUI
# 
# Navigate: Monitoring console (on left sidepane) => Forwarders => Deployment => Status Active.
# Check that Version shows the desired version.
# 
# ## Additional Info
# 
# - Splunkforwarder update: https://docs.splunk.com/Documentation/Forwarder/9.3.0/Forwarder/Upgradetheuniversalforwarder
# - Install: https://docs.splunk.com/Documentation/Forwarder/8.2.6/Forwarder/Installanixuniversalforwarder
# - Backing up info under (e.g.) /opt/splunkforwarder/etc https://docs.splunk.com/Documentation/Splunk/9.3.0/Admin/Backupconfigurations
# - Supported versions: https://docs.splunk.com/Documentation/SplunkCloud/9.2.2403/Service/SplunkCloudservice#Supported_forwarder_versions
# - Configuration: https://docs.splunk.com/Documentation/Forwarder/8.2.6/Forwarder/Enableareceiver
- name: Update Splunk forwarder (by a .tgz)
  hosts: '{{ host }}'
  gather_facts: false
  become: true
  vars:
    instprefix: /opt
    pkg: splunkforwarder-9.2.2-d76edf6f0a15-Linux-x86_64.tgz
    localtmp: /tmp
    fwdbin: '{{instprefix}}/splunkforwarder/bin/splunk'
    # Replaced by ts_res (unique T.S. labeleing) -method
    backupsuffix: 001
    # Hostname or IP address (example only, must change)
    splunkhost: 192.168.1.4
    splunkport: 8089
    # Unit can be generated by splunk enable boot-start
    # Unit loc (e.g.): /etc/systemd/system/SplunkForwarder.service
    sysdunit: SplunkForwarder
    splunkuser: root
    delay: 10
    confsubdir: local
    # Regenerate systemd unit
    regensysd: 0
  tasks:
    - name: Create timestamp
      shell: 'date --rfc-3339=seconds | perl -p -e "s/[\ :+]/_/g;"'
      register: ts_res
    - name: Copy Splunkforwarder TGZ
      copy:
        src: '{{localtmp}}/{{pkg}}'
        dest: '{{instprefix}}/{{pkg}}'
    # The splunk binary and systemd stop/start ways seem to be completely equivalent
    - name: Stop existing Splunk forwarder
      shell:
        # Legacy Only ?
        #cmd: '{{instprefix}}/splunkforwarder/bin/splunk stop'
        cmd: 'systemctl stop SplunkForwarder'
    # Typical (compressed) 1M+
    - name: Backup old configs ($SPLUNK_HOME/etc)
      shell:
        cmd: 'tar -zcf splunkforwarder.config.{{ ts_res.stdout }}.tgz etc/'
        # Alt: -C {{instprefix}}/splunkforwarder
        chdir: '{{instprefix}}/splunkforwarder'
    # Splunk doc "Upgradetheuniversalforwarder" (see links above) advices against moving/removing old dir.
    #- name: Remove/move old installation
    #  shell:
    #    cmd: 'mv {{instprefix}}/splunkforwarder {{instprefix }}/splunkforwarder.{{ ts_res.stdout }}'
    # Inspect (e.g) /opt/*.tgz and issue systemctl restart SplunkForwarder
    #- meta: end_play
    - name: Unpack forwarder update TGZ
      shell:
        cmd: 'tar -zxf {{pkg}}'
        chdir: '{{instprefix}}'
    # https://docs.splunk.com/Documentation/Splunk/9.3.0/Admin/Deploymentclientconf
    - name: Create deploymentclient.conf
      copy:
        dest: '{{instprefix}}/splunkforwarder/etc/apps/{{confsubdir}}/deploymentclient.conf'
        content: |
          [deployment-client]
          
          [target-broker:deploymentServer]
          targetUri = https://{{ splunkhost }}:{{ splunkport }}
        mode: 0644
        owner: '{{splunkuser}}'
        group: '{{splunkuser}}'
    #- name: End for inspection
    #  meta: end_play
    - name: Set SELinux Security Context
      shell: 'chcon -t usr_t {{instprefix}}/splunkforwarder/bin/splunk'
    # Avoid interactivity
    - name: Start Forwarder non-interactively (accepting license w/o prompting)
      shell: '{{instprefix}}/splunkforwarder/bin/splunk start --accept-license --answer-yes --no-prompt'
      # Per testing this will not cause non-0 exit
      #ignore_errors: yes
    #### Optional / conditional (based on regensysd) ######
    # ~10s. seems to be blocking
    - name: Stop forwarder for "boot-start" enablement
      shell: '{{instprefix}}/splunkforwarder/bin/splunk stop'
      when: regensysd
    - name: Delay for splunkforwarder complete stop
      pause:
        seconds: '{{delay}}'
      when: regensysd
    # Returns non-zero for existing /etc/systemd/system/SplunkForwarder.service (e.g. rc:4)
    - name: Enable forwarder bootstart
      shell: '{{instprefix}}/splunkforwarder/bin/splunk enable boot-start -user {{ splunkuser }}'
      when: regensysd
    - name: Reload installer generated units
      shell: 'systemctl daemon-reload'
      when: regensysd
    - name: Final restart using systemd
      shell: 'systemctl restart SplunkForwarder'
      when: regensysd
