# # Tenable Security Scan System Update
# Run by --tags with either target `--tags sc` or `--tags scanner`
# Example:
# ```
# # 
# ansible-playbook tenscanupdate.yaml --tags scanner -e "rpm_scan_update=Nessus-10.2.0-es8.x86_64.rpm"
# # Only SC supports backup step
# ansible-playbook tenscanupdate.yaml --tags sc -e "rpm_scan_update=SecurityCenter-5.21.0-el8.x86_64.rpm tgz_sc=SC-202206.1-5.x-rh8-64.tgz backup_local=true"
# ```
# # Nessus scanner Misc Info:
# - Docs: https://docs.tenable.com/nessus/Content/InstallNessusEssentialsProfessionalOrManager.htm
# - download site: https://www.tenable.com/downloads/nessus ( https://www.tenable.com/downloads/nessus?loginAttempted=true )
# - URL to test after install:  https://<remote IP address>:8834
# - Activation code discovery: /opt/nessus/sbin/nessuscli fetch --code-in-use
# - Activation code update/renewal: /opt/nessus/sbin/nessuscli fetch --register xxxx-xxxx-xxxx-xxxx
# # Nessus SC Nisc info
# - Verifying cert: /opt/sc/support/bin/openssl verify /opt/sc/support/conf/SecurityCenter.crt
# 
# # Some important directories
# 
# Security Center:
# - /opt/sc/www - Document root
# - /opt/sc/data/ *.cnf (ini format)
# - /opt/sc/data/plugins 
# - /opt/sc/data/nasl *.nasl (152k files) *.inc (400+ files)
# - /opt/sc/data/admin - NA
# - /opt/sc/data/CA - cert stuff (root, ... Apache SSLCACertificatePath)
# - /opt/sc/support/conf/ - SecurityCenter.crt, Sec....key (pub, priv, Apache SSLCertificateFile, SSLCertificateKeyFile), httpd.conf (Includes many *.conf from current dir)
# - /opt/sc/support/bin/ - apachectl, fcgistarter, httpd, ldapvc, onig-config, openssl, php, sqlite3
# - /opt/sc/support/etc/ - php.ini, syslog.conf, openldap/ldap.conf
# - /opt/sc/support/logs - Apache logs
# - /opt/sc/support/openssl/CA - does not exist, even if referred in ...
# - /opt/sc/plugins/ - license.key (SC 5.2 manual p. 855)
# Scanner:
# - /opt/nessus/bin/nasl - NASL Interpreter
# - /opt/nessus/com/nessus/CA/*.pem - certs (pem certs)
# - /opt/nessus/var/nessus/CA/*.pem - serverkey.pem, cakey.pem (Note: latter may also be cacert.key per nessus docs)
# - /opt/nessus/etc/nessus/ - Nessus configs
# - /opt/nessus/sbin - Nessus system bins nessusd, nessuscli, nessus-service
# - /opt/nessus/lib/nessus/plugins/*.nasl - NASL scripts/plugins, Also *.inc (Including plugin_feed_info.inc)
# - /opt/nessus/etc/nessus/nessusd.db - Preferences DB
# 
# View cert contents: `openssl x509 -in /opt/sc/support/conf/SecurityCenter.crt -text`
- name: Update Tenable Scanner
  hosts: '{{ host }}'
  become: true
  vars:
    # If using Tenable API to download file with curl
    rpm_api_url: 'https://www.tenable.com/downloads/api/v2/pages/nessus/files'
    # Scanner needs single RPM
    rpm_scan_update: 'Nessus-10.2.0-es8.x86_64.rpm'
    # 
    rpm_sc_update: 'SecurityCenter-5.21.0-el8.x86_64.rpm'
    # 'SC-202206.1-5.x-rh8-64.tgz'
    tgz_sc: ''
    # For cd $DIR. Actual dirname seems to be tgz name with '.tgz' stripped
    tgz_dir_patt: 'SC-202*'
    unit_scan: 'nessusd'
    unit_sc: 'SecurityCenter'
    backup_local: false
    php_ini_fn: /opt/sc/support/etc/php.ini
    # Note: Use /opt or /var if out of space. MUST have a value here !
    tmpdir: /tmp
    runscanas: nessus
  tasks:
    - name: Download Scanner Update RPM (from tenable.com)
      shell:
        cmd: 'curl "{{ rpm_api_url }}/{{ rpm_scan_update }}" --output {{ rpm_scan_update }}'
        chdir: '{{ tmpdir }}'
    #- name: Copy Update to Scanners
    #  copy:
    #    src: '/tmp/{{ rpm_scan_update }}'
    #    dest: '{{ tmpdir }}/{{ rpm_scan_update }}'
    #  tags: scanner
    # Since 
    - name: Stop Scanner for Update
      ansible.builtin.systemd:
        name: '{{ unit_scan }}'
        state: stopped
      tags: scanner
    - name: Update Scanner
      # Install: -ivh
      shell: 'rpm -Uvh {{ tmpdir }}/{{ rpm_scan_update }}'
      tags: scanner
    - name: (Re)start Scanner
      # shell: service SecurityCenter start; service SecurityCenter status
      ansible.builtin.systemd:
        name: '{{ unit_scan }}'
        state: started
      tags: scanner
    # Do here: useradd -r nessus {{ runscanas }}
    # chmod 750 /opt/nessus/sbin/* && chown -R {{ runscanas }}:{{ runscanas }} /opt/nessus
    - name: Modify systemd unit
      lineinfile:
        path: /usr/lib/systemd/system/nessusd.service
        regexp: '{{ item.regexp }}'
        line: '{{ item.line }}'
        with_items:
          - {regexp: '^ExecStart\s*=', line: 'ExecStart=/opt/nessus/sbin/nessus-service -q -no-root'}
          - {regexp: '^User\s*=', line: 'User={{ runscanas }}'}
    - name: Reload systemd (for unit change)
      shell: systemctl daemon-reload
    ###### SC #####
    # 
    - name: Copy Update to SC
      copy:
        src: '{{ tmpdir }}/{{ rpm_sc_update }}'
        dest: '{{ tmpdir }}/{{ rpm_sc_update }}'
      tags: sc
    - name: Copy TGZ to SC
      copy:
        src: '{{ tmpdir }}/{{ tgz_sc }}'
        dest: '{{ tmpdir }}/{{ tgz_sc }}'
      tags: sc
      when: tgz_sc
    # TODO Deps: yum install libxslt rsync java
    - name: 'Verify / Install dependencies'
      package:
        name:
          - libxslt
          - rsync
          - java
        state: present
      tags: sc
    - name: Stop Service for Update
      ansible.builtin.systemd:
        name: '{{ unit_sc }}'
        state: stopped
      tags: sc
    - name: Backup (Optional, see var backup)
      shell: 'tar -pzcf sc_backup.`date -Idate`.tar.gz /opt/sc'
      tags: sc
      when: backup_local
      # when: 0
    - name: Update SC
      shell: 'rpm -Uvh /tmp/{{ rpm_sc_update }}'
      tags: sc
    - name: (Re)start Security Center
      # shell: service SecurityCenter start; service SecurityCenter status
      ansible.builtin.systemd:
        name: '{{ unit_sc }}'
        state: started
      tags: sc
    #### SC TGZ Update ####
    - name: Stop Service for TGZ Update
      ansible.builtin.systemd:
        name: '{{ unit_sc }}'
        state: stopped
      tags: sc
      when: tgz_sc
    # Note: Should this indeed be after startup ?
    - name: Apply SC tgz patch
      shell: 'tar -C {{ tmpdir }} -zxvf {{ tmpdir }}/{{ tgz_sc }}; cd {{ tmpdir }}/{{ tgz_dir_patt }}; ./install.sh'
      tags: sc
      when: tgz_sc
      # when: 0
    - name: Remove TGZ Temp Directory
      shell:
        cmd: 'rm -rf {{ tmpdir }}/{{ tgz_dir_patt }}'
        chdir: '{{ tmpdir }}'
    - name: (Re)start Security Center
      # shell: service SecurityCenter start; service SecurityCenter status
      ansible.builtin.systemd:
        name: '{{ unit_sc }}'
        state: started
      tags: sc
      when: tgz_sc
    - name: Update Scanner status timeout (on SC)
      # To check / verify
      # /opt/sc/support/bin/sqlite3 -header -table /opt/sc/application.db "select name,value from Configuration where name='ScannerStatusTimeout'"
      shell: /opt/sc/support/bin/sqlite3 /opt/sc/application.db "Update Configuration set value=\'300\' where name=\'ScannerStatusTimeout\'"
    # Note: php.ini also has openssl.capath = '/opt/sc/data/CA'
    - name: Modify PHP Ini for Mem limits and POST size
      lineinfile:
        regexp: '{{ regexp }}'
        line: '{{ line }}'
      with_items:
        - {regexp: '^memory_limit\s+=\s+', line: 'memory_limit = 17000M'}
        - {regexp: '^post_max_size\s+=\s+', line: 'post_max_size = 17000M'}
