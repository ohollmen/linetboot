@startuml
skinparam roundcorner 10
title OS Post Ops and Post Install Next-Boot Polling

participant "OS Installer" as Client
participant "Installed OS" as OSClient
box "Linetboot"
' Works w. almost any plantuml element <img linux.png>
participant "Linetboot\nOSInstall" as HTTP

'participant "Parameter Creation" as Para
'participant "Tmpl Store" as TS
'participant "Tmpl Engine" as TE

participant "LinetBoot HTTP\nMedia Store" as media
participant "LinetBoot Post\nInstall Agent" as pi

end box

participant "User-Custom\nPostInst\nActions" as exec


hnote over Client: ... continued from earlier Installer diagram

Client <- HTTP: Send complete Install-Recipe to OS Installer

hnote over Client: Start OS Installation

'Client -> media: Request Install packages
'Client <- media: Fetch and Install

group Fetch and Install all needed (N) packages
Client -> media: Request SW Packages
' HTTP <-> media
Client <-- media: Deb: *.deb,*.udeb, RH: *.rpm
end

' hnote over Client: Post-Operations\n(RH: **%post**, Preseed: **late_command**)

group Post-Operations (RH: **%post**, Preseed: **late_command**)
Client -> HTTP: Request Post Scripts (cfg: inst.postscripts)
Client <- HTTP: Fetch, chmod (a+x) and Run
' Place here for better graphics alignment (even if logically belongs to Request ...)
note right: See examples:\n*os_fixup.sh\n*nis_setup.sh\n*ssh_keys_setup.sh

Client -> HTTP: Request SSH Public key\n(reverse ssh-copy-id by HTTP)
Client <- HTTP: Add key to ~/.ssh/authorized_keys

Client -> HTTP: Signal **end** event

end

note over HTTP: Detect Install Client IP Address
HTTP -> pi: Trigger First Boot (Post Install) Waiting

hnote over Client: End Installation, Issue Reboot

== Reboot ==

' NOTE: groups can only be nested, not intersected
' group BOOT
note over pi: Initial (configurable)\npre-polling wait (e.g 30s.)
note over OSClient: First Boot (w. new-OS)
note over pi: Poll by SSH\n* wait for OS Client to boot up\n* Use passwordless SSH
' Also: note right
'hnote 
'poll by SSH
'wait for OS Client to boot up
'passwordless SSH
'end note

group Poll "Host-up" by SSH (Till success or exhausting try-count)

OSClient <- pi: Test SSH by login
OSClient -> pi: <color:#C60C30>**Fail**</color>

note over OSClient: BIOS Init

OSClient <- pi: Test SSH by login
OSClient -> pi: <color:#C60C30>**Fail**</color>

note over OSClient:Boot new Local OS

OSClient <- pi: Test SSH by login
OSClient -> pi: <color:#C60C30>**Fail**</color>

note over OSClient:Start SSH Service

OSClient <- pi: Test SSH by login
OSClient -> pi: **Success**

end
' BOOT
'end


pi -> exec: Success: Run
note right: * JS callback\n* .sh, .py, .pl ...\n* ELF binaries
pi -> pi: Fail: No Action


exec -> OSClient: Provision additional features (SSH, SSH-exec, SCP, Ansible, rsync, Git, HTTP ...)



footer (C) Olli Hollmen 2020
@enduml
